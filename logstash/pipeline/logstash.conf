input {
  rabbitmq {
        host => "${RABBITMQ_HOST}"
        port => "${RABBITMQ_PORT}"
        heartbeat => 30
        durable => true
        exchange => "${LOG_EXCHANGE_NAME}"
        exchange_type => "${LOG_EXCHANGE_TYPE}"
        queue => "${LOG_QUEUE}"
    }
}

filter {
  # pattern matching logback pattern
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}\s+%{LOGLEVEL:severity}\s+\[%{DATA:service},%{DATA:trace},%{DATA:span},%{DATA:exportable}\]\s+%{DATA:pid}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{GREEDYDATA:rest}" }
  }
  date {
    match => ["timestamp", "ISO8601"]
  }
  mutate {
    remove_field => ["timestamp"]
  }
}

output {
  elasticsearch {
    hosts => ["http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT:9200}"]
  }
  stdout { codec => rubydebug }
}