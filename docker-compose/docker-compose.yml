version: '3'
services:
  catalog-service:
    image: "catalog-service-1"
    environment:
      - HOST_NAME=catalog-service
      - kafka.topic=log-topic
      - kafka.host=kafka:9200
      - CATALOGDATA_HOST=http://catalog-data:8000
    ports:
      - "8100:8100"
    depends_on:
      - "kafka"
    networks:
      my-network:
        aliases:
          - catalog-service
  logstash:
    image: "logstash"
    ports:
      - "9600:9600"
    environment:
      - KAFKA_SERVER=kafka:9200
      - KAFKA_TOPIC=log-topic
      - ELASTICSEARCH_HOST=els
      - ELASTICSEARCH_PORT=9200
    depends_on:
      - "kafka"
      - "els"
    networks:
      my-network:
        aliases:
          - logstash
  els:
    image: "elastic-search"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.name=es-cluster
      - node.name=es-node-1
    networks:
      my-network:
        aliases:
          - els
  kibana:
    image: "kibana"
    environment:
      - KIBANA_SERVER_NAME="kibana"
      - ELS_HOST=els
      - ELS_PORT=9200
      - KIBANA_SERVER_HOST=0.0.0.0
    ports:
      - 5601:5601
    depends_on:
      - "els"
    networks:
      my-network:
        aliases:
          - kibana
  zookeeper:
    image: 'zookeeper'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/data'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      my-network:
        aliases:
          - zookeeper
  kafka:
    image: 'kafka'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/data'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_SOCKET_REQUEST_MAX_BYTES=200000000
    depends_on:
      - zookeeper
    networks:
      my-network:
        aliases:
          - kafka

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
    my-network:
        driver: bridge